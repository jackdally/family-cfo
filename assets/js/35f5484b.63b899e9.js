"use strict";(self.webpackChunkfamily_cfo_docs=self.webpackChunkfamily_cfo_docs||[]).push([[862],{2617:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"overview/permissions","title":"Hasura Permissions (Owner-Based Access)","description":"Family CFO uses owner-based row filters enforced by Hasura. Every core table includes an ownerId column, and permissions are scoped to the session variable X-Hasura-User-Id for role user.","source":"@site/../overview/permissions.md","sourceDirName":"overview","slug":"/overview/permissions","permalink":"/family-cfo/overview/permissions","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"architecture","permalink":"/family-cfo/adr/architecture"},"next":{"title":"Developer: Getting Started (Local)","permalink":"/family-cfo/developer/getting-started-dev"}}');var a=n(4848),i=n(8453);const o={},c="Hasura Permissions (Owner-Based Access)",d={},l=[{value:"Session headers",id:"session-headers",level:2},{value:"Tables covered",id:"tables-covered",level:2},{value:"Quick local verification",id:"quick-local-verification",level:2},{value:"Unauthorized role",id:"unauthorized-role",level:2}];function t(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"hasura-permissions-owner-based-access",children:"Hasura Permissions (Owner-Based Access)"})}),"\n",(0,a.jsxs)(s.p,{children:["Family CFO uses owner-based row filters enforced by Hasura. Every core table includes an ",(0,a.jsx)(s.code,{children:"ownerId"})," column, and permissions are scoped to the session variable ",(0,a.jsx)(s.code,{children:"X-Hasura-User-Id"})," for role ",(0,a.jsx)(s.code,{children:"user"}),"."]}),"\n",(0,a.jsx)(s.h2,{id:"session-headers",children:"Session headers"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.code,{children:"X-Hasura-Role: user"})}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"X-Hasura-User-Id: <owner-id>"})," (MVP local value is ",(0,a.jsx)(s.code,{children:"owner-dev"}),")"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"tables-covered",children:"Tables covered"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"Scenario"}),", ",(0,a.jsx)(s.code,{children:"Account"}),", ",(0,a.jsx)(s.code,{children:"AccountBalance"}),", ",(0,a.jsx)(s.code,{children:"IncomeEvent"}),", ",(0,a.jsx)(s.code,{children:"ExpenseEvent"}),", ",(0,a.jsx)(s.code,{children:"AccountTransfer"}),", ",(0,a.jsx)(s.code,{children:"RecurringRule"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Select: ",(0,a.jsx)(s.code,{children:"ownerId = X-Hasura-User-Id"})]}),"\n",(0,a.jsxs)(s.li,{children:["Insert: ",(0,a.jsx)(s.code,{children:"ownerId"})," is auto-set via ",(0,a.jsx)(s.code,{children:"set: { ownerId: X-Hasura-User-Id }"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["These rules are encoded in ",(0,a.jsx)(s.code,{children:"hasura/metadata/metadata.json"})," and applied with:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"HASURA_GRAPHQL_ADMIN_SECRET=devadminsecret npm run hasura:apply\n"})}),"\n",(0,a.jsx)(s.h2,{id:"quick-local-verification",children:"Quick local verification"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"# List scenarios for owner-dev\ncurl -sS \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-hasura-admin-secret: devadminsecret' \\\n  -H 'x-hasura-role: user' \\\n  -H 'x-hasura-user-id: owner-dev' \\\n  -X POST http://localhost:8080/v1/graphql \\\n  --data-binary '{\"query\":\"query { Scenario(limit: 1) { id name ownerId } }\"}' | jq .\n\n# Insert a scenario (ownerId will be set by Hasura)\ncurl -sS \\\n  -H 'Content-Type: application/json' \\\n  -H 'x-hasura-admin-secret: devadminsecret' \\\n  -H 'x-hasura-role: user' \\\n  -H 'x-hasura-user-id: owner-dev' \\\n  -X POST http://localhost:8080/v1/graphql \\\n  --data-binary '{\"query\":\"mutation($name:String!){ insert_Scenario_one(object:{name:$name}){ id name ownerId }}\",\"variables\":{\"name\":\"Docs Test\"}}' | jq .\n"})}),"\n",(0,a.jsx)(s.h2,{id:"unauthorized-role",children:"Unauthorized role"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.code,{children:"HASURA_GRAPHQL_UNAUTHORIZED_ROLE=public"})," is enabled, but ",(0,a.jsx)(s.code,{children:"public"})," has no access by default. We may add selective read permissions later; not required for MVP."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var r=n(6540);const a={},i=r.createContext(a);function o(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);