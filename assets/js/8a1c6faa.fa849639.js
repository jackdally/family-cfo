"use strict";(self.webpackChunkfamily_cfo_docs=self.webpackChunkfamily_cfo_docs||[]).push([[864],{3085:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"adr/architecture","title":"architecture","description":"ADR 0001: Core Architecture for Family CFO MVP","source":"@site/../adr/0001-architecture.md","sourceDirName":"adr","slug":"/adr/architecture","permalink":"/family-cfo/adr/architecture","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"docs","previous":{"title":"Project Overview: Family CFO (by Steward)","permalink":"/family-cfo/"},"next":{"title":"Hasura Permissions (Owner-Based Access)","permalink":"/family-cfo/overview/permissions"}}');var r=i(4848),t=i(8453);const o={},l=void 0,a={},c=[{value:"ADR 0001: Core Architecture for Family CFO MVP",id:"adr-0001-core-architecture-for-family-cfo-mvp",level:2},{value:"Status",id:"status",level:3},{value:"Context",id:"context",level:3},{value:"Decision",id:"decision",level:3},{value:"Consequences",id:"consequences",level:3},{value:"Alternatives Considered",id:"alternatives-considered",level:3},{value:"Implementation Notes",id:"implementation-notes",level:3}];function d(e){const n={h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"adr-0001-core-architecture-for-family-cfo-mvp",children:"ADR 0001: Core Architecture for Family CFO MVP"}),"\n",(0,r.jsx)(n.h3,{id:"status",children:"Status"}),"\n",(0,r.jsx)(n.p,{children:"Accepted \u2014 2025-08-11"}),"\n",(0,r.jsx)(n.h3,{id:"context",children:"Context"}),"\n",(0,r.jsx)(n.p,{children:"Family CFO (by Steward) targets a dual-ledger, scenario-driven personal finance system. MVP decisions confirmed by product:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Single-user household owner for MVP (no shared roles yet)"}),"\n",(0,r.jsx)(n.li,{children:"Scenarios are full snapshot copies (branches), coexisting with actuals via a dual-ledger model"}),"\n",(0,r.jsx)(n.li,{children:"In-app alerts only for MVP"}),"\n",(0,r.jsx)(n.li,{children:"Data ingestion via a single, generic CSV template"}),"\n",(0,r.jsx)(n.li,{children:"Background jobs OK via lightweight scheduling (pg_cron) initially"}),"\n",(0,r.jsx)(n.li,{children:"Advisor access deferred"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Open question resolved here: business logic placement for scalability vs speed."}),"\n",(0,r.jsx)(n.h3,{id:"decision",children:"Decision"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"API and Data"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use Postgres as the system of record."}),"\n",(0,r.jsx)(n.li,{children:"Expose CRUD and queries via Hasura GraphQL over Postgres for rapid iteration and strong authorization."}),"\n",(0,r.jsx)(n.li,{children:"Enforce Row Level Security (RLS) in Postgres aligned with Hasura permissions. Supabase will provide Auth (user identities) in later phases; for local, we\u2019ll use a JWT/dev stub."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Business Logic"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Phase 0/1: Prefer Hasura-native constructs (Actions, Event Triggers, Scheduled Triggers) for orchestration that touches the DB and is transactional."}),"\n",(0,r.jsx)(n.li,{children:"Introduce a small Node/TypeScript service only where domain logic becomes complex (e.g., materializing recurring rules, batch projections). Expose it behind Hasura Actions to keep the public API unified."}),"\n",(0,r.jsx)(n.li,{children:"Optimizer/solver workloads will be separate Python microservices later, invoked asynchronously via Actions/Events."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Frontend"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Next.js 14 (App Router), TypeScript, Tailwind, shadcn/ui. Web-first with responsive design; mobile via Expo later."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Dev Experience & Infra"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Local dev via Docker Compose: Postgres + Hasura. Prisma for schema and migrations."}),"\n",(0,r.jsx)(n.li,{children:"CI via GitHub Actions: build, lint, type-check, unit tests. Preview deployments for PRs when hosting is configured."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"consequences",children:"Consequences"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Short-term: Fast CRUD/API via Hasura; minimal custom servers to maintain."}),"\n",(0,r.jsx)(n.li,{children:"Medium-term: When logic grows, add a focused Node service without breaking clients by routing via Hasura Actions."}),"\n",(0,r.jsx)(n.li,{children:"Long-term: Python services for optimization can scale independently; DB remains single source of truth."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"alternatives-considered",children:"Alternatives Considered"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Pure Node GraphQL/REST API now: More control but slower MVP; higher maintenance."}),"\n",(0,r.jsx)(n.li,{children:"Pure Hasura forever: Limits complex domain logic organization; Actions bridge the gap."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"implementation-notes",children:"Implementation Notes"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Configure Hasura with JWT auth for local, then switch to Supabase Auth in staging/prod."}),"\n",(0,r.jsx)(n.li,{children:"Use Prisma Migrate to evolve schema; Hasura tracks metadata on top."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);